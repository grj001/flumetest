#agent:a1
#sources:r1
#interceptors:i1
#channels:c1
#sinks:k1


a1.sources=r1
a1.sources.r1.type=exec

a1.sources.r1.command=tail -F /grj/test/test.txt
a1.sources.r1.channels=c1

a1.sources.r1.interceptors=i1
a1.sources.r1.interceptors.i1.type=timestamp


a1.channels=c1
a1.channels.c1.type=memory
a1.channels.c1.capacity=10000
a1.channels.c1.transactionCapacity=10000


a1.sinks.k1.type=hdfs
a1.sinks.k1.channel=c1
#/%y-%m-%d-%H-%M-%S
a1.sinks.k1.hdfs.path=/grj/flume/events/%y-%m-%d
#前缀
a1.sinks.k1.hdfs.filePrefix=events-
#后缀
a1.sinks.k1.hdfs.fileSuffix=.txt

#文件类型SequenceFile, DataStream or CompressedStream
#SequenceFile,压缩
#DataStream,没有压缩,能够查看
#CompressedStream已经进行压缩了?
a1.sinks.k1.hdfs.fileType=DataStream

#临时文件的文件名前缀.
a1.sinks.k1.hdfs.inUsePrefix=
#临时文件的文件名后缀.
a1.sinks.k1.hdfs.inUseSuffix=.tmp

#当临时文件达到该大小（单位：bytes）时，滚动成目标文件.
a1.sinks.k1.hdfs.rollSize=0
#当events数据达到该数量时候，将临时文件滚动成目标文件.
a1.sinks.k1.hdfs.rollCount=4
#注：滚动（roll）指的是，hdfs sink将临时文件重命名成最终目标文件，并新打开一个临时文件来写入数据
a1.sinks.k1.hdfs.rollInterval=0

#当目前被打开的临时文件在该参数指定的时间（秒）内，没有任何数据写入，则将该临时文件关闭并重命名成目标文件；
a1.sinks.k1.hdfs.idleTimeout=0

#每个批次刷新到HDFS上的events数量；
a1.sinks.k1.hdfs.batchSize=100

#文件压缩格式，包括：gzip, bzip2, lzo, lzop, snappy
a1.sinks.k1.hdfs.codeC=

#是否启用时间上的”舍弃”，这里的”舍弃”，类似于”四舍五入”，后面再介绍。如果启用，则会影响除了%t的其他所有时间表达式;
#a1.sinks.k1.hdfs.round=false
#时间上进行“舍弃”的值；
#a1.sinks.k1.hdfs.roundValue=10
时间上进行”舍弃”的单位，包含：second,minute,hour
#a1.sinks.k1.hdfs.roundUnit=minute


a1.sources=r1
a1.channels=c1
a1.sinks=k1